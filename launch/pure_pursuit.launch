<?xml version="1.0"?>
<launch>
    <rosparam command="load" file="$(find f110_pure_pursuit)/pure_pursuit_params.yaml" />
    <!-- Launch a map from the maps folder-->
    <arg name="map" default="$(find racecar_simulator)/maps/levine.yaml"/>
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map)"/>

    <!-- Launch the racecar model -->
    <include file="$(find racecar_simulator)/launch/racecar_model.launch"/>

    <!-- Begin the simulator with the parameters from params.yaml -->
    <node pkg="racecar_simulator" name="racecar_simulator" type="simulate" output="screen">
    <rosparam command="load" file="$(find racecar_simulator)/params.yaml"/>
    </node>

    <!-- Launch pf -->
    <node pkg="rostopic" type="rostopic" name="rostopic" args="pub initialpose geometry_msgs/PoseWithCovarianceStamped '
        {
            header: {
                frame_id: map
            }, 
            pose: {
                pose: {
                    position: {
                        x: 1.91, 
                        y: -0.17, 
                        z: 0.0}, 
                    orientation: {
                        x: 0.0,
                        y: 0.0,
                        z: -0.375239,
                        w: 0.926928}
                }
            }
        }'" />

    <arg name="scan_topic" default="/scan"/>
    <arg name="odometry_topic" default="/vesc/odom"/>
    <arg name="angle_step" default="18"/>
    <arg name="max_particles" default="4000"/>
    <arg name="squash_factor" default="2.2"/>
    <arg name="viz" default="1"/>
    
    <node pkg="particle_filter" type="particle_filter.py" name="Particle_filter">
        <param name="scan_topic" value="$(arg scan_topic)"/>
        <param name="odometry_topic" value="$(arg odometry_topic)"/>
        <!-- range data is downsampled by this factor -->
        <param name="angle_step" value="$(arg angle_step)"/>
        <param name="max_particles" value="$(arg max_particles)"/>
        <param name="max_viz_particles" value="60"/>
        <param name="range_method" value="pcddt"/>
        <!-- use following if on the car -->
        <!-- <param name="range_method" value="rmgpu"/> -->
        <param name="squash_factor" value="$(arg squash_factor)"/>
        <param name="theta_discretization" value="112"/>
        <!-- max sensor range in meters -->
        <param name="max_range" value="10"/> 
        <param name="viz" value="$(arg viz)"/> 
        <param name="fine_timing" value="0"/> 
        <param name="publish_odom" value="1"/> 

        <!-- sensor model constants, see sensor model section in the Lab5 guide document -->
        <param name="z_short" value="0.01"/> 
        <param name="z_max" value="0.07"/> 
        <param name="z_rand" value="0.12"/> 
        <param name="z_hit" value="0.75"/> 
        <param name="sigma_hit" value="8.0"/> 

        <!-- motion model dispersion constant, this could be improved. Large values will spread out
             the particle distribution more. Too much and it is overly computational to represent the
             true prob. dist, too little and the particle filter can diverge at high speeds where the
             ackermann motion model is inaccurate
        -->
        <param name="motion_dispersion_x" value="0.05"/> 
        <param name="motion_dispersion_y" value="0.025"/> 
        <param name="motion_dispersion_theta" value="0.25"/> 

        <!-- this option switches between different sensor model variants, high values are more
             optimized. range_variant 3 does not work for rmgpu, but variant 2 is very good. variant
             4 only works with cddt or pcddt range_method options
        -->
        <param name="rangelib_variant" value="2"/>
    </node>

    <!-- launch pure pursuit -->
    <node pkg="f110_pure_pursuit" name="pure_pursuit" type="f110_pure_pursuit_node" output="screen" />



</launch>